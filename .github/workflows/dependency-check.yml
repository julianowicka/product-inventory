name: Dependency Check

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.4'

jobs:
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for outdated packages
      run: npm outdated || true
      
    - name: Create issue for security vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: ['security', 'dependencies']
          });
          
          const existingIssue = issues.find(issue => 
            issue.title.includes('Security Audit Failed')
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Audit Failed - Action Required',
              body: `## Security Audit Failed
              
              The automated security audit has detected vulnerabilities in the dependencies.
              
              **Action Required:**
              1. Run \`npm audit\` locally to see details
              2. Update vulnerable packages
              3. Test the application thoroughly
              4. Create a PR with the updates
              
              **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
              
              **Commit:** ${{ github.sha }}`,
              labels: ['security', 'dependencies', 'high-priority']
            });
          }
          
    - name: Comment on existing security issues
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: ['security', 'dependencies']
          });
          
          for (const issue of issues) {
            if (issue.title.includes('Security Audit Failed')) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `âœ… **Security audit passed!**
                
                The latest security audit completed successfully with no vulnerabilities detected.
                
                **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                
                This issue can be closed.`
              });
            }
          }
